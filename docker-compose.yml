version: '3'

services:

  munin:
    image: tuxmonteiro/ucentos:7
    env_file:
      - st2/conf/postgres.env
    ports:
      - "8002:8080"
    depends_on:
      - mysql
      - postgres
      - api
      - keystone
    networks:
      - public
      - private
    volumes:
      - ./munin:/mnt
      - ./jdk:/mnt/jdk
      - ./userdata/munin.sh:/mnt/start.sh
      - ./drivers/postgresql-42.2.6.jar:/tmp/postgresql-42.2.6.jar
    command: /mnt/start.sh

  chapolin:
    image: tuxmonteiro/ucentos:7
    env_file:
      - st2/conf/rabbitmq.env
      - st2/conf/stackstorm.env
    ports:
      - "8001:8080"
    depends_on:
      - rabbitmq
      - redis
      - stackstorm
    networks:
      - public
      - private
    volumes:
      - ./chapolin:/mnt
      - ./jdk:/mnt/jdk
      - ./userdata/chapolin.sh:/mnt/start.sh
      - ./stanley_rsa:/mnt/id_rsa
    command: /mnt/start.sh

  api:
    image: tuxmonteiro/ucentos:7
    env_file:
      - st2/conf/rabbitmq.env
      - st2/conf/stackstorm.env
    ports:
      - "8000:8080"
    depends_on:
      - mysql
      - rabbitmq
      - redis
      - stackstorm
      - keystone
    networks:
      - public
      - private
    volumes:
      - ./api:/mnt
      - ./jdk:/mnt/jdk
      - ./userdata/api.sh:/mnt/start.sh
      - ~/:/root
    command: /mnt/start.sh


### External Services
  stackstorm:
    image: stackstorm/stackstorm:${ST2_IMAGE_TAG:-latest}
    env_file:
      - st2/conf/stackstorm.env
      - st2/conf/mongo.env
      - st2/conf/rabbitmq.env
      - st2/conf/postgres.env
      - st2/conf/redis.env
    ports:
      - "8043:443"
    depends_on:
      - mongo
      - postgres
      - rabbitmq
      - redis
    networks:
      - public
      - private
    volumes:
      - stackstorm-packs-volume:/opt/stackstorm/packs
      - stackstorm-virtualenvs-volume:/opt/stackstorm/virtualenvs
      - stackstorm-configs-volume:/opt/stackstorm/configs
      - stackstorm-log-volume:/var/log
      - ./packs.dev:/opt/stackstorm/packs.dev
      - ./runtime/entrypoint.d:/st2-docker/entrypoint.d
      - ./runtime/st2.d:/st2-docker/st2.d
      - ./st2/conf/stackstorm.env:/st2-docker/env
    dns_search: .

  mongo:
    image: mongo:3.4
    env_file:
      - st2/conf/mongo.env
    networks:
      - private
    volumes:
      - mongo-volume:/data/db
      - mongo-configdb-volume:/data/configdb
    dns_search: .
  rabbitmq:
    image: rabbitmq:3.6-management
    env_file:
      - st2/conf/rabbitmq.env
    networks:
      - private
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    dns_search: .
    ports:
      - "15672:15672"
      - "5672:5672"
  postgres:
    image: postgres:9.6
    env_file:
      - st2/conf/postgres.env
    networks:
      - private
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    dns_search: .
  redis:
    image: redis:4.0
    env_file:
      - st2/conf/redis.env
    networks:
      - private
    volumes:
      - redis-volume:/data
    dns_search: .
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$REDIS_PASSWORD"
      '
    ]
  keystone:
    image: tuxmonteiro/keystone:latest
    networks:
      - private
    dns_search: .
  mysql:
    image: mysql:5.6
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: pepe
    volumes:
      - mysql-volume:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - private
    dns_search: .

volumes:
  mysql-volume:
  mongo-volume:
  mongo-configdb-volume:
  postgres-volume:
  rabbitmq-volume:
  redis-volume:
  stackstorm-packs-volume:
  stackstorm-virtualenvs-volume:
  stackstorm-configs-volume:
  stackstorm-log-volume:

networks:
  public:
    driver: bridge
  private:
    driver: bridge
